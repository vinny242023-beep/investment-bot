import logging
import sqlite3
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Railway (–∫–ª—é—á–∏ —Å—Ä–∞–∑—É –ø—Ä–æ–ø–∏—Å–∞–Ω—ã, –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ)
BOT_TOKEN = "8203632125:AAFl3OqXf4mKeijmA1-YFmJGP9UMUbCxl0I"
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ‚ú® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–∞–∑–∞ (–ë–û–õ–¨–®–ï –°–ï–ö–¶–ò–ô):
SALUTATION = "–ü—Ä–∏–≤–µ—Ç üëã\n–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º!\n\n–Ø –æ–±—ä—è—Å–Ω—è—é —Å–∞–º—ã–µ –ø—Ä–æ—Å—Ç—ã–µ –≤–µ—â–∏ –ø—Ä–æ —Ñ–∏–Ω–∞–Ω—Å—ã, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –ª–∏—á–Ω—ã–µ –¥–µ–Ω—å–≥–∏.\n\n–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏ —á–∏—Ç–∞–π —Å–æ–≤–µ—Ç—ã!"

WHAT_IS_INVEST = (
    "üü¢ –ß—Ç–æ —Ç–∞–∫–æ–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ?\n"
    "‚Äî –≠—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∞–∫—Ç–∏–≤–æ–≤ —Å —Ü–µ–ª—å—é —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞.\n"
    "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–º–∏ (–Ω–∞ –≥–æ–¥—ã) –∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–º–∏ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤).\n"
)

WHY_IMPORTANT = (
    "üåü –ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?\n"
    "‚Ä¢ –ó–∞—â–∏—â–∞–µ—à—å –¥–µ–Ω—å–≥–∏ –æ—Ç –∏–Ω—Ñ–ª—è—Ü–∏–∏\n"
    "‚Ä¢ –°—Ç—Ä–æ–∏—à—å —Å–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥—É—à–∫—É\n"
    "‚Ä¢ –£—á–∏—à—å—Å—è –¥—É–º–∞—Ç—å –æ –±—É–¥—É—â–µ–º, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –æ —Å–µ–≥–æ–¥–Ω—è\n"
    "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å —Å–≤–æ–±–æ–¥–Ω–µ–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞–¥–µ–∂–Ω—ã–º –∞–∫—Ç–∏–≤–∞–º."
)

INVEST_TYPES = [
    "‚Ä¢ –ê–∫—Ü–∏–∏ ‚Äî –¥–æ–ª—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏, —Ä–∞—Å—Ç—ë—Ç –≤–º–µ—Å—Ç–µ —Å –±–∏–∑–Ω–µ—Å–æ–º.",
    "‚Ä¢ –û–±–ª–∏–≥–∞—Ü–∏–∏ ‚Äî –∑–∞—â–∏—Ç–∞ –∫–∞–ø–∏—Ç–∞–ª–∞, —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤.",
    "‚Ä¢ ETF ‚Äî –∫–æ—Ä–æ–±–æ—á–∫–∞ –∏–∑ –∞–∫—Ü–∏–π –∏ –æ–±–ª–∏–≥–∞—Ü–∏–π, –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ –Ω–∞—á–∏–Ω–∞—é—â–∏–º.",
    "‚Ä¢ –í–∞–ª—é—Ç–∞ ‚Äî –¥–æ–ª–ª–∞—Ä—ã, –µ–≤—Ä–æ, —Ñ—Ä–∞–Ω–∫–∏, —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –æ—Ç –ø–∞–¥–µ–Ω–∏—è —Ä—É–±–ª—è.",
    "‚Ä¢ –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å ‚Äî —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –∞–∫—Ç–∏–≤—ã, –º–æ–∂–Ω–æ —Å–¥–∞–≤–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É.",
    "‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ ‚Äî —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –∞–∫—Ç–∏–≤, —Ç–æ–ª—å–∫–æ –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ç–æ—Ä–æ–≤.",
    "‚Ä¢ –ó–æ–ª–æ—Ç–æ ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –∑–∞—â–∏—Ç–∞ –∫–∞–ø–∏—Ç–∞–ª–∞ –≤ –∫—Ä–∏–∑–∏—Å."
]

MAIN_CONCEPTS = [
    "‚Ä¢ –î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è ‚Äî —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–≥ –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏.",
    "‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Ü–µ–ª—å ‚Äî –∑–∞—á–µ–º –∏ –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–µ—à—å.",
    "‚Ä¢ –ë—Ä–æ–∫–µ—Ä ‚Äî —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∞–∫—Ü–∏–π –∏ –æ–±–ª–∏–≥–∞—Ü–∏–π.",
    "‚Ä¢ –ü–æ—Ä—Ç—Ñ–µ–ª—å ‚Äî –≤—Å–µ –∞–∫—Ç–∏–≤—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ —Ç—ã –≤–ª–∞–¥–µ–µ—à—å.",
    "‚Ä¢ –†–∏—Å–∫ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Ç–µ—Ä—è—Ç—å —á–∞—Å—Ç—å –¥–µ–Ω–µ–≥.",
    "‚Ä¢ –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å ‚Äî —Å–∫–æ–ª—å–∫–æ —Ç—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥.",
    "‚Ä¢ –ò–Ω—Ñ–ª—è—Ü–∏—è ‚Äî —Ä–æ—Å—Ç —Ü–µ–Ω, –∏–∑-–∑–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä—É–±–ª–∏ –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—é—Ç—Å—è.",
    "‚Ä¢ –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ –Ω–æ–≤—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏.",
    "‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –≤–∫–ª–∞–¥ ‚Äî —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥, –Ω–æ –Ω–∏–∂–µ —á–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ."
]

SAFETY = (
    "üîí –ö–∞–∫ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–µ–Ω—å–≥–∏:\n"
    "‚Ä¢ –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–∫–ª–∞–¥—ã–≤–∞–π –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–Ω—å–≥–∏!\n"
    "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å –ª–∏—Ü–µ–Ω–∑–∏–∏ –±—Ä–æ–∫–µ—Ä–∞ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤.\n"
    "‚Ä¢ –ù–µ –≤–µ–¥–∏—Å—å –Ω–∞ —Ö–∞–π–ø –∏ –æ–±–µ—â–∞–Ω–∏—è –æ–≥—Ä–æ–º–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏.\n"
    "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π —Å–æ–≤–µ—Ç—ã –Ω–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö (–¶–ë–†, investing.com)\n"
    "‚Ä¢ –í—Å–µ–≥–¥–∞ —á–∏—Ç–∞–π –æ—Ç–∑—ã–≤—ã —Ä–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–º–∏—Å—Å–∏–∏."
)

MOTIVATION = (
    "üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è:\n"
    "‚Äî –¢—ã —Å–º–æ–∂–µ—à—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å, —Ä–∞–±–æ—Ç–∞—Ç—å –≥–¥–µ —É–¥–æ–±–Ω–æ.\n"
    "‚Äî –¢–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª —Ä–∞—Å—Ç—ë—Ç –¥–∞–∂–µ –ø–æ–∫–∞ —Ç—ã —Å–ø–∏—à—å.\n"
    "‚Äî –î–µ–Ω—å–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ —Ç–µ–±—è!\n"
)

ADVICE = [
    "‚Ä¢ –ù–∞—á–Ω–∏ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã (1000-3000‚ÇΩ).",
    "‚Ä¢ –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–π —Å—Ä–∞–∑—É –≤—Å—ë.",
    "‚Ä¢ –ò–∑—É—á–∏ –±–∞–∑—É: –∞–∫—Ü–∏–∏, –æ–±–ª–∏–≥–∞—Ü–∏–∏, ETF (–∫–æ—Ä–æ–±–æ—á–∫–∏ —Å –±—É–º–∞–≥–∞–º–∏).",
    "‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π —Ç–µ—Ä–ø–µ–Ω–∏–µ ‚Äî —É—Å–ø–µ—Ö –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∑–∞ –º–µ—Å—è—Ü.",
    "‚Ä¢ –í–µ–¥–∏—Ç–µ —É—á—ë—Ç —Å–≤–æ–∏—Ö —Ç—Ä–∞—Ç –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.",
    "‚Ä¢ –†–∞–∑–¥–µ–ª—è–π —Å–≤–æ–∏ —Ü–µ–ª–∏ –Ω–∞ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ.",
    "‚Ä¢ –ß–∏—Ç–∞–π —Ü–µ–Ω–Ω—É—é –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É –∏ —Å—Ç–∞—Ç—å–∏ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º.",
    "‚Ä¢ –°–ø—Ä–æ—Å–∏—Ç—å —Å–æ–≤–µ—Ç —É –æ–ø—ã—Ç–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ ‚Äî —ç—Ç–æ —Ö–æ—Ä–æ—à–æ!",
]

ERRORS = [
    "‚Ä¢ –í–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤—Å–µ –¥–µ–Ω—å–≥–∏ —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω—É –∞–∫—Ü–∏—é.",
    "‚Ä¢ –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∏—Å—Å–∏–∏ –±—Ä–æ–∫–µ—Ä–∞.",
    "‚Ä¢ –û–ø–∏—Ä–∞—Ç—å—Å—è –Ω–∞ –ø–ª–æ—Ö–∏–µ —Å–æ–≤–µ—Ç—ã –∏–∑ —á–∞—Ç–æ–≤.",
    "‚Ä¢ –°–Ω–∏–º–∞—Ç—å –¥–µ–Ω—å–≥–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–∞–¥–µ–Ω–∏–∏ ‚Äî –ø–∞–Ω–∏–∫–∞ = –º–∏–Ω—É—Å.",
    "‚Ä¢ –ü–æ–∫—É–ø–∞—Ç—å —á—Ç–æ –ø–æ–ø–∞–ª–æ, –Ω–µ –∏–º–µ—è –ø–ª–∞–Ω–∞.",
    "‚Ä¢ –ù–µ –∏–º–µ—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–æ–¥—É—à–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."
]

FAQ = [
    "1. –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –±—Ä–æ–∫–µ—Ä–∞? ‚Äî –°–º–æ—Ç—Ä–∏ –Ω–∞ –æ—Ç–∑—ã–≤—ã, –ª–∏—Ü–µ–Ω–∑–∏–∏ –∏ —É–¥–æ–±—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
    "2. –ö–∞–∫–∏–µ –∞–∫—Ü–∏–∏ —Å–∞–º—ã–µ –Ω–∞–¥—ë–∂–Ω—ã–µ? ‚Äî –ë–æ–ª—å—à–∏–µ –≥–æ—Å–∫–æ–º–ø–∞–Ω–∏–∏ –∏ —Ñ–æ–Ω–¥—ã.",
    "3. –ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å? ‚Äî –û—Ç–∫—Ä–æ–π —Å—á—ë—Ç, –ø–æ–ø–æ–ª–Ω–∏ –∏ –∫—É–ø–∏ ETF –∏–ª–∏ –∞–∫—Ü–∏—é.",
    "4. –≠—Ç–æ –æ–ø–∞—Å–Ω–æ? ‚Äî –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –≤–∫–ª–∞–¥—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–Ω—å–≥–∏.",
    "5. –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å? ‚Äî –ù–∞–¥—ë–∂–Ω–æ: 7-20% –≤ –≥–æ–¥, —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ ‚Äî –±–æ–ª—å—à–µ, –Ω–æ –æ–ø–∞—Å–Ω–µ–π."
]

BOOKS = [
    "‚Ä¢ '–°–∞–º—ã–π –±–æ–≥–∞—Ç—ã–π —á–µ–ª–æ–≤–µ–∫ –≤ –í–∞–≤–∏–ª–æ–Ω–µ' ‚Äî –î–∂. –ö–ª–µ–π—Å–æ–Ω",
    "‚Ä¢ '–†–∞–∑—É–º–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–æ—Ä' ‚Äî –ë. –ì—Ä—ç–º",
    "‚Ä¢ '–î—É–º–∞–π –∏ –±–æ–≥–∞—Ç–µ–π' ‚Äî –ù. –•–∏–ª–ª",
    "‚Ä¢ '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è' ‚Äî –ö. –†–∏—á–∞—Ä–¥—Å",
]

CURRENCIES = [
    "‚Ä¢ USD/RUB: 97.61",
    "‚Ä¢ EUR/RUB: 103.44",
]
STOCKS = [
    "‚Ä¢ FXRL (ETF –†–æ—Å—Å–∏–π—Å–∫–∏–µ –∞–∫—Ü–∏–∏): 1274.3‚ÇΩ",
    "‚Ä¢ FXRB (ETF –†–æ—Å—Å–∏–π—Å–∫–∏–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏): 1149.7‚ÇΩ",
    "‚Ä¢ –°–±–µ—Ä–±–∞–Ω–∫: 289.25‚ÇΩ",
    "‚Ä¢ –ì–∞–∑–ø—Ä–æ–º: 146.18‚ÇΩ",
]
CRYPTO = [
    "‚Ä¢ Bitcoin: 69000$",
    "‚Ä¢ Ethereum: 3740$",
    "‚Ä¢ Solana: 32.5$",
]

def get_keyboard():
    return ReplyKeyboardMarkup(
        [
            ["üìä –ú–µ–Ω—é", "üü† –ß—Ç–æ —Ç–∞–∫–æ–µ –∏–Ω–≤–µ—Å—Ç?", "üåü –ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ"],
            ["üí° –í–∏–¥—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π", "üìñ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è", "üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"],
            ["üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è", "üß© –°–æ–≤–µ—Ç—ã", "üîç –û—à–∏–±–∫–∏"],
            ["üìù FAQ", "üìö –ö–Ω–∏–≥–∏"],
            ["üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", "üìà –ê–∫—Ü–∏–∏", "üí∏ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞"],
            ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]
        ],
        resize_keyboard=True
    )

class InvestmentInfoBot:
    def __init__(self):
        self.init_db()

    def init_db(self):
        con = sqlite3.connect("users.db")
        cur = con.cursor()
        cur.execute(
            "CREATE TABLE IF NOT EXISTS user_stats (user_id INTEGER PRIMARY KEY, name TEXT, questions_count INTEGER, last_visit TEXT)"
        )
        con.commit()
        con.close()

    def update_user_stat(self, user_id, name):
        con = sqlite3.connect("users.db")
        cur = con.cursor()
        cur.execute(
            "INSERT OR IGNORE INTO user_stats (user_id, name, questions_count, last_visit) VALUES (?, ?, 0, datetime('now'))",
            (user_id, name)
        )
        cur.execute(
            "UPDATE user_stats SET last_visit=datetime('now') WHERE user_id=?",
            (user_id,)
        )
        con.commit()
        con.close()

    def increment_questions(self, user_id):
        con = sqlite3.connect("users.db")
        cur = con.cursor()
        cur.execute(
            "UPDATE user_stats SET questions_count = questions_count + 1 WHERE user_id=?",
            (user_id,)
        )
        con.commit()
        con.close()

    async def start(self, update: Update, context: CallbackContext):
        user = update.effective_user
        self.update_user_stat(user.id, user.first_name)
        await update.message.reply_text(SALUTATION, reply_markup=get_keyboard())

    async def handle_message(self, update: Update, context: CallbackContext):
        user = update.effective_user
        self.update_user_stat(user.id, user.first_name)
        self.increment_questions(user.id)
        msg = update.message.text.strip().lower()
        if "–º–µ–Ω—é" in msg: await update.message.reply_text(SALUTATION, reply_markup=get_keyboard()); return
        if "–∏–Ω–≤–µ—Å—Ç" in msg: await update.message.reply_text(WHAT_IS_INVEST, reply_markup=get_keyboard()); return
        if "–≤–∞–∂–Ω–æ" in msg: await update.message.reply_text(WHY_IMPORTANT, reply_markup=get_keyboard()); return
        if "–≤–∏–¥" in msg: await update.message.reply_text("üí° –í–∏–¥—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:\n" + "\n".join(INVEST_TYPES), reply_markup=get_keyboard()); return
        if "–ø–æ–Ω—è—Ç" in msg: await update.message.reply_text("üìñ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è:\n" + "\n".join(MAIN_CONCEPTS), reply_markup=get_keyboard()); return
        if "–±–µ–∑–æ–ø–∞—Å" in msg: await update.message.reply_text(SAFETY, reply_markup=get_keyboard()); return
        if "–º–æ—Ç–∏–≤–∞—Ü" in msg: await update.message.reply_text(MOTIVATION, reply_markup=get_keyboard()); return
        if "—Å–æ–≤–µ—Ç" in msg: await update.message.reply_text("üß© –°–æ–≤–µ—Ç—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤:\n" + "\n".join(ADVICE), reply_markup=get_keyboard()); return
        if "–æ—à–∏–±" in msg: await update.message.reply_text("üîç –û—à–∏–±–∫–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞:\n" + "\n".join(ERRORS), reply_markup=get_keyboard()); return
        if "faq" in msg: await update.message.reply_text("üìù FAQ:\n" + "\n".join(FAQ), reply_markup=get_keyboard()); return
        if "–∫–Ω–∏–≥" in msg: await update.message.reply_text("üìö –ö–Ω–∏–≥–∏:\n" + "\n".join(BOOKS), reply_markup=get_keyboard()); return
        if "–≤–∞–ª—é—Ç" in msg: await update.message.reply_text("üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç:\n" + "\n".join(CURRENCIES), reply_markup=get_keyboard()); return
        if "–∞–∫—Ü–∏" in msg: await update.message.reply_text("üìà –ê–∫—Ü–∏–∏ –∏ ETF:\n" + "\n".join(STOCKS), reply_markup=get_keyboard()); return
        if "–∫—Ä–∏–ø—Ç" in msg: await update.message.reply_text("üí∏ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞:\n" + "\n".join(CRYPTO), reply_markup=get_keyboard()); return
        if "—Å—Ç–∞—Ç" in msg:
            con = sqlite3.connect("users.db")
            cur = con.cursor()
            cur.execute("SELECT questions_count, last_visit FROM user_stats WHERE user_id=?", (user.id,))
            row = cur.fetchone()
            con.close()
            if row:
                stats_msg = (
                    f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
                    f"–í–æ–ø—Ä–æ—Å–æ–≤: {row[0]}\n"
                    f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç: {row[1]}"
                )
            else:
                stats_msg = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
            await update.message.reply_text(stats_msg, reply_markup=get_keyboard())
            return
        await update.message.reply_text(
            "–ù–∞–ø–∏—à–∏ –Ω–∞ –∫–∞–∫—É—é —Ç–µ–º—É —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å: '–í–∏–¥—ã', '–ü–æ–Ω—è—Ç–∏—è', '–û—à–∏–±–∫–∏', 'FAQ', '–ö–Ω–∏–≥–∏', '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç–∞', '–ê–∫—Ü–∏–∏', '–ö—Ä–∏–ø—Ç–∞', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–°–æ–≤–µ—Ç—ã', '–ú–æ—Ç–∏–≤–∞—Ü–∏—è'. –î–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ‚Äî –Ω–∞–ø–∏—à–∏ '–ú–µ–Ω—é'.",
            reply_markup=get_keyboard()
        )

    def setup_handlers(self, application):
        application.add_handler(CommandHandler("start", self.start))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    bot = InvestmentInfoBot()
    application = Application.builder().token(BOT_TOKEN).build()
    bot.setup_handlers(application)
    print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–∏—à–∏ –µ–º—É –≤ Telegram /start")
    application.run_polling()

if __name__ == "__main__":
    main()
